{
  "name": "HrFlow.ai Connectors",
  "connectors": [
    {
      "name": "Bullhorn",
      "type": "ATS",
      "subtype": "bullhorn",
      "logo": "https://raw.githubusercontent.com/Riminder/hrflow-connectors/master/src/hrflow_connectors/v2/connectors/bullhorn/logo.jpeg",
      "actions": [
        {
          "name": "create_jobs_in_hrflow",
          "data_type": "job",
          "direction": "inbound",
          "mode": "create",
          "connector_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "client_id": {
                "description": "Client identifier for Bullhorn",
                "type": "string"
              },
              "client_secret": {
                "description": "Client secret identifier for Bullhorn",
                "type": "string"
              },
              "password": {
                "description": "Password for Bullhorn login",
                "type": "string"
              },
              "username": {
                "description": "Username for Bullhorn login",
                "type": "string"
              }
            },
            "required": [
              "client_id",
              "client_secret",
              "password",
              "username"
            ]
          },
          "hrflow_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "api_secret": {
                "description": "API Key used to access HrFlow.ai API",
                "type": "string"
              },
              "api_user": {
                "description": "User email used to access HrFlow.ai API",
                "type": "string"
              }
            },
            "required": [
              "api_secret",
              "api_user"
            ]
          },
          "origin": "Bullhorn",
          "origin_data_schema": {
            "title": "BullhornJob",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for this entity",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": []
          },
          "supports_incremental": false,
          "pull_parameters": {
            "title": "ReadCreatedJobsCriterias",
            "type": "object",
            "properties": {
              "limit": {
                "description": "Number of items to pull, ignored if not provided.",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "fields": {
                "description": "List of job fields to be retrieved from Bullhorn",
                "type": "string",
                "minLength": 2,
                "default": "address,assignedUsers,businessSectors,categories,clientBillRate,clientContact,clientCorporation,costCenter,customInt1,customInt2,customText1,customText10,customText11,customText12,customText13,customText2,customText3,customText4,customText5,customText6,customText7,customText8,customText9,customTextBlock1,customTextBlock2,customTextBlock3,customTextBlock4,customTextBlock5,dateAdded,dateEnd,degreeList,description,durationWeeks,educationDegree,employmentType,feeArrangement,hoursOfOperation,hoursPerWeek,isOpen,isWorkFromHome,markUpPercentage,numOpenings,onSite,payRate,salary,salaryUnit,skills,skillList,source,specialties,startDate,status,title,type,willRelocate,owner"
              },
              "query": {
                "description": "This query will restrict the results retrieved from Bullhorn based on the specified conditions",
                "type": "string",
                "default": "isDeleted:0 AND isOpen:true"
              },
              "created_date": {
                "description": "The creation date from which you want to pull jobs",
                "type": "string"
              }
            },
            "required": [
              "created_date"
            ]
          },
          "target": "HrFlow",
          "target_data_schema": {
            "title": "HrFlowJob",
            "type": "object",
            "properties": {
              "key": {
                "description": "Identification key of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "reference": {
                "description": "Custom identifier of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "name": {
                "description": "Job title.",
                "type": "string"
              },
              "location": {
                "description": "Job location object.",
                "$ref": "#/$defs/Location"
              },
              "sections": {
                "description": "Job custom sections.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Section"
                }
              },
              "url": {
                "description": "Job post original URL.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "summary": {
                "description": "Brief summary of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "archieved_at": {
                "description": "type: datetime ISO8601, Archive date of the Job. The value is null for unarchived Jobs.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "updated_at": {
                "description": "type: datetime ISO8601, Last update date of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "created_at": {
                "description": "type: datetime ISO8601, Creation date of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "skills": {
                "description": "list of skills of the Job.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Skill"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "languages": {
                "description": "list of spoken languages of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "list of certifications of the Job.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "courses": {
                "description": "list of courses of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tasks": {
                "description": "list of tasks of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tags": {
                "description": "list of tags of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadatas": {
                "description": "list of metadatas of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "ranges_float": {
                "description": "list of ranges of floats",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/RangesFloat"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "ranges_date": {
                "description": "list of ranges of dates",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/RangesDate"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": [
              "name",
              "location",
              "sections"
            ]
          },
          "push_parameters": {
            "title": "CreateCriterias",
            "type": "object",
            "properties": {
              "board_key": {
                "description": "HrFlow.ai board key",
                "type": "string"
              },
              "enrich_with_parsing": {
                "description": "When enabled jobs are enriched with HrFlow.ai parsing",
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "board_key"
            ]
          },
          "jsonmap": {},
          "workflow": {
            "catch_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\n\n# << event_parser_placeholder >>\n\n\n\ndef workflow(\n        \n        _request: dict,\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.create_jobs_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n    event_parser = globals().get(\"event_parser\", globals().get(\"default_event_parser\"))\n\n    if event_parser is not None:\n        try:\n            _request = event_parser(_request)\n        except Exception as e:\n            return Bullhorn.create_jobs_in_hrflow(\n                workflow_id=workflow_id,\n                connector_auth=dict(),\n                hrflow_auth=dict(),\n                pull_parameters=dict(),\n                push_parameters=dict(),\n                init_error=ActionInitError(\n                    reason=Reason.event_parsing_failure,\n                    data=dict(error=e, event=_request),\n                )\n            )\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            connector_auth[parameter] = _request[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            hrflow_auth[parameter] = _request[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'created_date'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            pull_parameters[parameter] = _request[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('board_key', 'enrich_with_parsing'):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            push_parameters[parameter] = _request[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.create_jobs_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "pull_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\ndef workflow(\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.create_jobs_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'created_date'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('board_key', 'enrich_with_parsing'):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.create_jobs_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "settings_keys": {
              "workflow_id": "__workflow_id",
              "incremental": "__incremental",
              "connector_auth_prefix": "connector_auth_",
              "hrflow_auth_prefix": "hrflow_auth_",
              "pull_parameters_prefix": "pull_parameters_",
              "push_parameters_prefix": "push_parameters_"
            },
            "placeholders": {
              "logics": "# << logics_placeholder >>",
              "format": "# << format_placeholder >>",
              "callback": "# << callback_placeholder >>",
              "event_parser": "# << event_parser_placeholder >>"
            },
            "expected": {
              "activate_incremental": "enable",
              "logics_functions_name": "logics",
              "format_functions_name": "format",
              "callback_functions_name": "callback",
              "event_parser_function_name": "event_parser"
            }
          }
        },
        {
          "name": "update_jobs_in_hrflow",
          "data_type": "job",
          "direction": "inbound",
          "mode": "update",
          "connector_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "client_id": {
                "description": "Client identifier for Bullhorn",
                "type": "string"
              },
              "client_secret": {
                "description": "Client secret identifier for Bullhorn",
                "type": "string"
              },
              "password": {
                "description": "Password for Bullhorn login",
                "type": "string"
              },
              "username": {
                "description": "Username for Bullhorn login",
                "type": "string"
              }
            },
            "required": [
              "client_id",
              "client_secret",
              "password",
              "username"
            ]
          },
          "hrflow_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "api_secret": {
                "description": "API Key used to access HrFlow.ai API",
                "type": "string"
              },
              "api_user": {
                "description": "User email used to access HrFlow.ai API",
                "type": "string"
              }
            },
            "required": [
              "api_secret",
              "api_user"
            ]
          },
          "origin": "Bullhorn",
          "origin_data_schema": {
            "title": "BullhornJob",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for this entity",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": []
          },
          "supports_incremental": false,
          "pull_parameters": {
            "title": "ReadUpdatedJobsCriterias",
            "type": "object",
            "properties": {
              "limit": {
                "description": "Number of items to pull, ignored if not provided.",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "fields": {
                "description": "List of job fields to be retrieved from Bullhorn",
                "type": "string",
                "minLength": 2,
                "default": "address,assignedUsers,businessSectors,categories,clientBillRate,clientContact,clientCorporation,costCenter,customInt1,customInt2,customText1,customText10,customText11,customText12,customText13,customText2,customText3,customText4,customText5,customText6,customText7,customText8,customText9,customTextBlock1,customTextBlock2,customTextBlock3,customTextBlock4,customTextBlock5,dateAdded,dateEnd,degreeList,description,durationWeeks,educationDegree,employmentType,feeArrangement,hoursOfOperation,hoursPerWeek,isOpen,isWorkFromHome,markUpPercentage,numOpenings,onSite,payRate,salary,salaryUnit,skills,skillList,source,specialties,startDate,status,title,type,willRelocate,owner"
              },
              "query": {
                "description": "This query will restrict the results retrieved from Bullhorn based on the specified conditions",
                "type": "string",
                "default": "isDeleted:0 AND isOpen:true"
              },
              "last_modified_date": {
                "description": "The modification date from which you want to pull jobs",
                "type": "string"
              }
            },
            "required": [
              "last_modified_date"
            ]
          },
          "target": "HrFlow",
          "target_data_schema": {
            "title": "HrFlowJob",
            "type": "object",
            "properties": {
              "key": {
                "description": "Identification key of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "reference": {
                "description": "Custom identifier of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "name": {
                "description": "Job title.",
                "type": "string"
              },
              "location": {
                "description": "Job location object.",
                "$ref": "#/$defs/Location"
              },
              "sections": {
                "description": "Job custom sections.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Section"
                }
              },
              "url": {
                "description": "Job post original URL.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "summary": {
                "description": "Brief summary of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "archieved_at": {
                "description": "type: datetime ISO8601, Archive date of the Job. The value is null for unarchived Jobs.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "updated_at": {
                "description": "type: datetime ISO8601, Last update date of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "created_at": {
                "description": "type: datetime ISO8601, Creation date of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "skills": {
                "description": "list of skills of the Job.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Skill"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "languages": {
                "description": "list of spoken languages of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "list of certifications of the Job.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "courses": {
                "description": "list of courses of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tasks": {
                "description": "list of tasks of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tags": {
                "description": "list of tags of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadatas": {
                "description": "list of metadatas of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "ranges_float": {
                "description": "list of ranges of floats",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/RangesFloat"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "ranges_date": {
                "description": "list of ranges of dates",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/RangesDate"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": [
              "name",
              "location",
              "sections"
            ]
          },
          "push_parameters": {
            "title": "UpdateCriterias",
            "type": "object",
            "properties": {
              "board_key": {
                "description": "HrFlow.ai board key",
                "type": "string"
              }
            },
            "required": [
              "board_key"
            ]
          },
          "jsonmap": {},
          "workflow": {
            "catch_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\n\n# << event_parser_placeholder >>\n\n\n\ndef workflow(\n        \n        _request: dict,\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.update_jobs_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n    event_parser = globals().get(\"event_parser\", globals().get(\"default_event_parser\"))\n\n    if event_parser is not None:\n        try:\n            _request = event_parser(_request)\n        except Exception as e:\n            return Bullhorn.update_jobs_in_hrflow(\n                workflow_id=workflow_id,\n                connector_auth=dict(),\n                hrflow_auth=dict(),\n                pull_parameters=dict(),\n                push_parameters=dict(),\n                init_error=ActionInitError(\n                    reason=Reason.event_parsing_failure,\n                    data=dict(error=e, event=_request),\n                )\n            )\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            connector_auth[parameter] = _request[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            hrflow_auth[parameter] = _request[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'last_modified_date'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            pull_parameters[parameter] = _request[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('board_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            push_parameters[parameter] = _request[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.update_jobs_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "pull_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\ndef workflow(\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.update_jobs_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'last_modified_date'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('board_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.update_jobs_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "settings_keys": {
              "workflow_id": "__workflow_id",
              "incremental": "__incremental",
              "connector_auth_prefix": "connector_auth_",
              "hrflow_auth_prefix": "hrflow_auth_",
              "pull_parameters_prefix": "pull_parameters_",
              "push_parameters_prefix": "push_parameters_"
            },
            "placeholders": {
              "logics": "# << logics_placeholder >>",
              "format": "# << format_placeholder >>",
              "callback": "# << callback_placeholder >>",
              "event_parser": "# << event_parser_placeholder >>"
            },
            "expected": {
              "activate_incremental": "enable",
              "logics_functions_name": "logics",
              "format_functions_name": "format",
              "callback_functions_name": "callback",
              "event_parser_function_name": "event_parser"
            }
          }
        },
        {
          "name": "update_jobs_in_hrflow",
          "data_type": "job",
          "direction": "inbound",
          "mode": "update",
          "connector_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "client_id": {
                "description": "Client identifier for Bullhorn",
                "type": "string"
              },
              "client_secret": {
                "description": "Client secret identifier for Bullhorn",
                "type": "string"
              },
              "password": {
                "description": "Password for Bullhorn login",
                "type": "string"
              },
              "username": {
                "description": "Username for Bullhorn login",
                "type": "string"
              }
            },
            "required": [
              "client_id",
              "client_secret",
              "password",
              "username"
            ]
          },
          "hrflow_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "api_secret": {
                "description": "API Key used to access HrFlow.ai API",
                "type": "string"
              },
              "api_user": {
                "description": "User email used to access HrFlow.ai API",
                "type": "string"
              }
            },
            "required": [
              "api_secret",
              "api_user"
            ]
          },
          "origin": "Bullhorn",
          "origin_data_schema": {
            "title": "BullhornJob",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for this entity",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": []
          },
          "supports_incremental": false,
          "pull_parameters": {
            "title": "ReadUpdatedJobsCriterias",
            "type": "object",
            "properties": {
              "limit": {
                "description": "Number of items to pull, ignored if not provided.",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "fields": {
                "description": "List of job fields to be retrieved from Bullhorn",
                "type": "string",
                "minLength": 2,
                "default": "address,assignedUsers,businessSectors,categories,clientBillRate,clientContact,clientCorporation,costCenter,customInt1,customInt2,customText1,customText10,customText11,customText12,customText13,customText2,customText3,customText4,customText5,customText6,customText7,customText8,customText9,customTextBlock1,customTextBlock2,customTextBlock3,customTextBlock4,customTextBlock5,dateAdded,dateEnd,degreeList,description,durationWeeks,educationDegree,employmentType,feeArrangement,hoursOfOperation,hoursPerWeek,isOpen,isWorkFromHome,markUpPercentage,numOpenings,onSite,payRate,salary,salaryUnit,skills,skillList,source,specialties,startDate,status,title,type,willRelocate,owner"
              },
              "query": {
                "description": "This query will restrict the results retrieved from Bullhorn based on the specified conditions",
                "type": "string",
                "default": "isDeleted:0 AND isOpen:true"
              },
              "last_modified_date": {
                "description": "The modification date from which you want to pull jobs",
                "type": "string"
              }
            },
            "required": [
              "last_modified_date"
            ]
          },
          "target": "HrFlow",
          "target_data_schema": {
            "title": "HrFlowJob",
            "type": "object",
            "properties": {
              "key": {
                "description": "Identification key of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "reference": {
                "description": "Custom identifier of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "name": {
                "description": "Job title.",
                "type": "string"
              },
              "location": {
                "description": "Job location object.",
                "$ref": "#/$defs/Location"
              },
              "sections": {
                "description": "Job custom sections.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/Section"
                }
              },
              "url": {
                "description": "Job post original URL.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "summary": {
                "description": "Brief summary of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "archieved_at": {
                "description": "type: datetime ISO8601, Archive date of the Job. The value is null for unarchived Jobs.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "updated_at": {
                "description": "type: datetime ISO8601, Last update date of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "created_at": {
                "description": "type: datetime ISO8601, Creation date of the Job.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "skills": {
                "description": "list of skills of the Job.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Skill"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "languages": {
                "description": "list of spoken languages of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "list of certifications of the Job.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "courses": {
                "description": "list of courses of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tasks": {
                "description": "list of tasks of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tags": {
                "description": "list of tags of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadatas": {
                "description": "list of metadatas of the Job",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "ranges_float": {
                "description": "list of ranges of floats",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/RangesFloat"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "ranges_date": {
                "description": "list of ranges of dates",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/RangesDate"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": [
              "name",
              "location",
              "sections"
            ]
          },
          "push_parameters": {
            "title": "UpdateCriterias",
            "type": "object",
            "properties": {
              "board_key": {
                "description": "HrFlow.ai board key",
                "type": "string"
              }
            },
            "required": [
              "board_key"
            ]
          },
          "jsonmap": {},
          "workflow": {
            "catch_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\n\n# << event_parser_placeholder >>\n\n\n\ndef workflow(\n        \n        _request: dict,\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.update_jobs_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n    event_parser = globals().get(\"event_parser\", globals().get(\"default_event_parser\"))\n\n    if event_parser is not None:\n        try:\n            _request = event_parser(_request)\n        except Exception as e:\n            return Bullhorn.update_jobs_in_hrflow(\n                workflow_id=workflow_id,\n                connector_auth=dict(),\n                hrflow_auth=dict(),\n                pull_parameters=dict(),\n                push_parameters=dict(),\n                init_error=ActionInitError(\n                    reason=Reason.event_parsing_failure,\n                    data=dict(error=e, event=_request),\n                )\n            )\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            connector_auth[parameter] = _request[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            hrflow_auth[parameter] = _request[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'last_modified_date'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            pull_parameters[parameter] = _request[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('board_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            push_parameters[parameter] = _request[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.update_jobs_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "pull_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\ndef workflow(\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.update_jobs_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'last_modified_date'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('board_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.update_jobs_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "settings_keys": {
              "workflow_id": "__workflow_id",
              "incremental": "__incremental",
              "connector_auth_prefix": "connector_auth_",
              "hrflow_auth_prefix": "hrflow_auth_",
              "pull_parameters_prefix": "pull_parameters_",
              "push_parameters_prefix": "push_parameters_"
            },
            "placeholders": {
              "logics": "# << logics_placeholder >>",
              "format": "# << format_placeholder >>",
              "callback": "# << callback_placeholder >>",
              "event_parser": "# << event_parser_placeholder >>"
            },
            "expected": {
              "activate_incremental": "enable",
              "logics_functions_name": "logics",
              "format_functions_name": "format",
              "callback_functions_name": "callback",
              "event_parser_function_name": "event_parser"
            }
          }
        },
        {
          "name": "create_profiles_in_hrflow",
          "data_type": "profile",
          "direction": "inbound",
          "mode": "create",
          "connector_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "client_id": {
                "description": "Client identifier for Bullhorn",
                "type": "string"
              },
              "client_secret": {
                "description": "Client secret identifier for Bullhorn",
                "type": "string"
              },
              "password": {
                "description": "Password for Bullhorn login",
                "type": "string"
              },
              "username": {
                "description": "Username for Bullhorn login",
                "type": "string"
              }
            },
            "required": [
              "client_id",
              "client_secret",
              "password",
              "username"
            ]
          },
          "hrflow_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "api_secret": {
                "description": "API Key used to access HrFlow.ai API",
                "type": "string"
              },
              "api_user": {
                "description": "User email used to access HrFlow.ai API",
                "type": "string"
              }
            },
            "required": [
              "api_secret",
              "api_user"
            ]
          },
          "origin": "Bullhorn",
          "origin_data_schema": {
            "title": "BullhornProfile",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for this entity",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "address": {
                "description": "Candidate address",
                "anyOf": [
                  {
                    "type": "null"
                  },
                  {
                    "$ref": "#/$defs/BullhornAddress"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "Candidate\u2019s certifications",
                "default": null
              },
              "name": {
                "description": "Candidate\u2019s full name. If setting firstname or lastname, you must also set this field; it does not populate automatically",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "firstName": {
                "description": "Candidate\u2019s first name",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "lastName": {
                "description": "Name of the file",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "email": {
                "description": "Candidate\u2019s email address",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "mobile": {
                "description": "Candidate\u2019s mobile (cell) telephone number",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "dateOfBirth": {
                "description": "Candidate\u2019s date of birth",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "experience": {
                "description": "Number of years of experience that the Candidate has",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "skillSet": {
                "description": "Text description of Candidate\u2019s skills",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": []
          },
          "supports_incremental": false,
          "pull_parameters": {
            "title": "ReadCreatedProfilesCriterias",
            "type": "object",
            "properties": {
              "limit": {
                "description": "Number of items to pull, ignored if not provided.",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "fields": {
                "description": "List of profile fields to be retrieved from Bullhorn",
                "type": "string",
                "minLength": 2,
                "default": "address,businessSectors,categories,companyName,customInt4,customInt5,customInt6,customText1,customText10,customText11,customText12,customText13,customText14,customText15,customText16,customText18,customText23,customText24,customText25,customText4,customText5,customText6,customText9,dateAdded,dateAvailable,dateAvailableEnd,dateLastModified,dateOfBirth,dayRate,dayRateLow,degreeList,desiredLocations,description,disability,educations,email,email2,employmentPreference,ethnicity,experience,firstName,id,lastName,mobile,name,namePrefix,occupation,owner,phone,primarySkills,secondaryOwners,secondarySkills,salary,salaryLow,skillSet,source,specialties,status,userDateAdded,veteran,willRelocate,workHistories,workPhone"
              },
              "query": {
                "description": "This query will restrict the results retrieved from Bullhorn based on the specified conditions",
                "type": "string",
                "default": "isDeleted:0"
              },
              "created_date": {
                "description": "The creation date from which you want to pull profiles",
                "type": "string"
              },
              "parse_resume": {
                "description": "If True, resumes will be retrieved and parsed along with the profile data",
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "created_date"
            ]
          },
          "target": "HrFlow",
          "target_data_schema": {
            "title": "HrFlowProfile",
            "type": "object",
            "properties": {
              "key": {
                "description": "Identification key of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "reference": {
                "description": "Custom identifier of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "info": {
                "description": "Object containing the Profile's info.",
                "$ref": "#/$defs/ProfileInfo"
              },
              "text_language": {
                "description": "Code language of the Profile. type: string code ISO 639-1",
                "type": "string"
              },
              "text": {
                "description": "Full text of the Profile.",
                "type": "string"
              },
              "archived_at": {
                "description": "type: datetime ISO8601, Archive date of the Profile. The value is null for unarchived Profiles.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "updated_at": {
                "description": "type: datetime ISO8601, Last update date of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "created_at": {
                "description": "type: datetime ISO8601, Creation date of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "experiences_duration": {
                "description": "Total number of years of experience.",
                "type": "number"
              },
              "educations_duration": {
                "description": "Total number of years of education.",
                "type": "number"
              },
              "experiences": {
                "description": "List of experiences of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Experience"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": []
              },
              "educations": {
                "description": "List of educations of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Education"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": []
              },
              "attachments": {
                "description": "List of documents attached to the Profile.",
                "type": "array",
                "default": []
              },
              "skills": {
                "description": "List of skills of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Skill"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "languages": {
                "description": "List of spoken languages of the profile",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "List of certifications of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "courses": {
                "description": "List of courses of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tasks": {
                "description": "List of tasks of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "interests": {
                "description": "List of interests of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tags": {
                "description": "List of tags of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadatas": {
                "description": "List of metadatas of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "labels": {
                "description": "List of labels of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Label"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": [
              "info",
              "text_language",
              "text",
              "experiences_duration",
              "educations_duration"
            ]
          },
          "push_parameters": {
            "title": "CreateCriterias",
            "type": "object",
            "properties": {
              "source_key": {
                "description": "HrFlow.ai source key",
                "type": "string"
              }
            },
            "required": [
              "source_key"
            ]
          },
          "jsonmap": {},
          "workflow": {
            "catch_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\n\n# << event_parser_placeholder >>\n\n\n\ndef workflow(\n        \n        _request: dict,\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.create_profiles_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n    event_parser = globals().get(\"event_parser\", globals().get(\"default_event_parser\"))\n\n    if event_parser is not None:\n        try:\n            _request = event_parser(_request)\n        except Exception as e:\n            return Bullhorn.create_profiles_in_hrflow(\n                workflow_id=workflow_id,\n                connector_auth=dict(),\n                hrflow_auth=dict(),\n                pull_parameters=dict(),\n                push_parameters=dict(),\n                init_error=ActionInitError(\n                    reason=Reason.event_parsing_failure,\n                    data=dict(error=e, event=_request),\n                )\n            )\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            connector_auth[parameter] = _request[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            hrflow_auth[parameter] = _request[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'created_date', 'parse_resume'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            pull_parameters[parameter] = _request[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('source_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            push_parameters[parameter] = _request[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.create_profiles_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "pull_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\ndef workflow(\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.create_profiles_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'created_date', 'parse_resume'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('source_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.create_profiles_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "settings_keys": {
              "workflow_id": "__workflow_id",
              "incremental": "__incremental",
              "connector_auth_prefix": "connector_auth_",
              "hrflow_auth_prefix": "hrflow_auth_",
              "pull_parameters_prefix": "pull_parameters_",
              "push_parameters_prefix": "push_parameters_"
            },
            "placeholders": {
              "logics": "# << logics_placeholder >>",
              "format": "# << format_placeholder >>",
              "callback": "# << callback_placeholder >>",
              "event_parser": "# << event_parser_placeholder >>"
            },
            "expected": {
              "activate_incremental": "enable",
              "logics_functions_name": "logics",
              "format_functions_name": "format",
              "callback_functions_name": "callback",
              "event_parser_function_name": "event_parser"
            }
          }
        },
        {
          "name": "update_profiles_in_hrflow",
          "data_type": "profile",
          "direction": "inbound",
          "mode": "update",
          "connector_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "client_id": {
                "description": "Client identifier for Bullhorn",
                "type": "string"
              },
              "client_secret": {
                "description": "Client secret identifier for Bullhorn",
                "type": "string"
              },
              "password": {
                "description": "Password for Bullhorn login",
                "type": "string"
              },
              "username": {
                "description": "Username for Bullhorn login",
                "type": "string"
              }
            },
            "required": [
              "client_id",
              "client_secret",
              "password",
              "username"
            ]
          },
          "hrflow_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "api_secret": {
                "description": "API Key used to access HrFlow.ai API",
                "type": "string"
              },
              "api_user": {
                "description": "User email used to access HrFlow.ai API",
                "type": "string"
              }
            },
            "required": [
              "api_secret",
              "api_user"
            ]
          },
          "origin": "Bullhorn",
          "origin_data_schema": {
            "title": "BullhornProfile",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for this entity",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "address": {
                "description": "Candidate address",
                "anyOf": [
                  {
                    "type": "null"
                  },
                  {
                    "$ref": "#/$defs/BullhornAddress"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "Candidate\u2019s certifications",
                "default": null
              },
              "name": {
                "description": "Candidate\u2019s full name. If setting firstname or lastname, you must also set this field; it does not populate automatically",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "firstName": {
                "description": "Candidate\u2019s first name",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "lastName": {
                "description": "Name of the file",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "email": {
                "description": "Candidate\u2019s email address",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "mobile": {
                "description": "Candidate\u2019s mobile (cell) telephone number",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "dateOfBirth": {
                "description": "Candidate\u2019s date of birth",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "experience": {
                "description": "Number of years of experience that the Candidate has",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "skillSet": {
                "description": "Text description of Candidate\u2019s skills",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": []
          },
          "supports_incremental": false,
          "pull_parameters": {
            "title": "ReadUpdatedProfilesCriterias",
            "type": "object",
            "properties": {
              "limit": {
                "description": "Number of items to pull, ignored if not provided.",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "fields": {
                "description": "List of profile fields to be retrieved from Bullhorn",
                "type": "string",
                "minLength": 2,
                "default": "address,businessSectors,categories,companyName,customInt4,customInt5,customInt6,customText1,customText10,customText11,customText12,customText13,customText14,customText15,customText16,customText18,customText23,customText24,customText25,customText4,customText5,customText6,customText9,dateAdded,dateAvailable,dateAvailableEnd,dateLastModified,dateOfBirth,dayRate,dayRateLow,degreeList,desiredLocations,description,disability,educations,email,email2,employmentPreference,ethnicity,experience,firstName,id,lastName,mobile,name,namePrefix,occupation,owner,phone,primarySkills,secondaryOwners,secondarySkills,salary,salaryLow,skillSet,source,specialties,status,userDateAdded,veteran,willRelocate,workHistories,workPhone"
              },
              "query": {
                "description": "This query will restrict the results retrieved from Bullhorn based on the specified conditions",
                "type": "string",
                "default": "isDeleted:0"
              },
              "last_modified_date": {
                "description": "The modification date from which you want to pull profiles",
                "type": "string"
              },
              "parse_resume": {
                "description": "If True, resumes will be retrieved and parsed along with the profile data",
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "last_modified_date"
            ]
          },
          "target": "HrFlow",
          "target_data_schema": {
            "title": "HrFlowProfile",
            "type": "object",
            "properties": {
              "key": {
                "description": "Identification key of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "reference": {
                "description": "Custom identifier of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "info": {
                "description": "Object containing the Profile's info.",
                "$ref": "#/$defs/ProfileInfo"
              },
              "text_language": {
                "description": "Code language of the Profile. type: string code ISO 639-1",
                "type": "string"
              },
              "text": {
                "description": "Full text of the Profile.",
                "type": "string"
              },
              "archived_at": {
                "description": "type: datetime ISO8601, Archive date of the Profile. The value is null for unarchived Profiles.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "updated_at": {
                "description": "type: datetime ISO8601, Last update date of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "created_at": {
                "description": "type: datetime ISO8601, Creation date of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "experiences_duration": {
                "description": "Total number of years of experience.",
                "type": "number"
              },
              "educations_duration": {
                "description": "Total number of years of education.",
                "type": "number"
              },
              "experiences": {
                "description": "List of experiences of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Experience"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": []
              },
              "educations": {
                "description": "List of educations of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Education"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": []
              },
              "attachments": {
                "description": "List of documents attached to the Profile.",
                "type": "array",
                "default": []
              },
              "skills": {
                "description": "List of skills of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Skill"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "languages": {
                "description": "List of spoken languages of the profile",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "List of certifications of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "courses": {
                "description": "List of courses of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tasks": {
                "description": "List of tasks of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "interests": {
                "description": "List of interests of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tags": {
                "description": "List of tags of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadatas": {
                "description": "List of metadatas of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "labels": {
                "description": "List of labels of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Label"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": [
              "info",
              "text_language",
              "text",
              "experiences_duration",
              "educations_duration"
            ]
          },
          "push_parameters": {
            "title": "UpdateCriterias",
            "type": "object",
            "properties": {
              "source_key": {
                "description": "HrFlow.ai source key",
                "type": "string"
              },
              "only_edit_fields": {
                "description": "List of attributes to use for the edit operation e.g. ['tags', 'metadatas']",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": [
              "source_key"
            ]
          },
          "jsonmap": {},
          "workflow": {
            "catch_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\n\n# << event_parser_placeholder >>\n\n\n\ndef workflow(\n        \n        _request: dict,\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.update_profiles_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n    event_parser = globals().get(\"event_parser\", globals().get(\"default_event_parser\"))\n\n    if event_parser is not None:\n        try:\n            _request = event_parser(_request)\n        except Exception as e:\n            return Bullhorn.update_profiles_in_hrflow(\n                workflow_id=workflow_id,\n                connector_auth=dict(),\n                hrflow_auth=dict(),\n                pull_parameters=dict(),\n                push_parameters=dict(),\n                init_error=ActionInitError(\n                    reason=Reason.event_parsing_failure,\n                    data=dict(error=e, event=_request),\n                )\n            )\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            connector_auth[parameter] = _request[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            hrflow_auth[parameter] = _request[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'last_modified_date', 'parse_resume'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            pull_parameters[parameter] = _request[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('source_key', 'only_edit_fields'):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            push_parameters[parameter] = _request[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.update_profiles_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "pull_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\ndef workflow(\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.update_profiles_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'fields', 'query', 'last_modified_date', 'parse_resume'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('source_key', 'only_edit_fields'):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.update_profiles_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "settings_keys": {
              "workflow_id": "__workflow_id",
              "incremental": "__incremental",
              "connector_auth_prefix": "connector_auth_",
              "hrflow_auth_prefix": "hrflow_auth_",
              "pull_parameters_prefix": "pull_parameters_",
              "push_parameters_prefix": "push_parameters_"
            },
            "placeholders": {
              "logics": "# << logics_placeholder >>",
              "format": "# << format_placeholder >>",
              "callback": "# << callback_placeholder >>",
              "event_parser": "# << event_parser_placeholder >>"
            },
            "expected": {
              "activate_incremental": "enable",
              "logics_functions_name": "logics",
              "format_functions_name": "format",
              "callback_functions_name": "callback",
              "event_parser_function_name": "event_parser"
            }
          }
        },
        {
          "name": "archive_profiles_in_hrflow",
          "data_type": "profile",
          "direction": "inbound",
          "mode": "archive",
          "connector_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "client_id": {
                "description": "Client identifier for Bullhorn",
                "type": "string"
              },
              "client_secret": {
                "description": "Client secret identifier for Bullhorn",
                "type": "string"
              },
              "password": {
                "description": "Password for Bullhorn login",
                "type": "string"
              },
              "username": {
                "description": "Username for Bullhorn login",
                "type": "string"
              }
            },
            "required": [
              "client_id",
              "client_secret",
              "password",
              "username"
            ]
          },
          "hrflow_auth_parameters": {
            "title": "AuthParameters",
            "type": "object",
            "properties": {
              "api_secret": {
                "description": "API Key used to access HrFlow.ai API",
                "type": "string"
              },
              "api_user": {
                "description": "User email used to access HrFlow.ai API",
                "type": "string"
              }
            },
            "required": [
              "api_secret",
              "api_user"
            ]
          },
          "origin": "Bullhorn",
          "origin_data_schema": {
            "title": "BullhornProfile",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for this entity",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "address": {
                "description": "Candidate address",
                "anyOf": [
                  {
                    "type": "null"
                  },
                  {
                    "$ref": "#/$defs/BullhornAddress"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "Candidate\u2019s certifications",
                "default": null
              },
              "name": {
                "description": "Candidate\u2019s full name. If setting firstname or lastname, you must also set this field; it does not populate automatically",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "firstName": {
                "description": "Candidate\u2019s first name",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "lastName": {
                "description": "Name of the file",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "email": {
                "description": "Candidate\u2019s email address",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "mobile": {
                "description": "Candidate\u2019s mobile (cell) telephone number",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "dateOfBirth": {
                "description": "Candidate\u2019s date of birth",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "experience": {
                "description": "Number of years of experience that the Candidate has",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "skillSet": {
                "description": "Text description of Candidate\u2019s skills",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": []
          },
          "supports_incremental": false,
          "pull_parameters": {
            "title": "ReadArchivedProfilesCriterias",
            "type": "object",
            "properties": {
              "limit": {
                "description": "Number of items to pull, ignored if not provided.",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "last_modified_date": {
                "description": "The modification date from which you want to pull profiles",
                "type": "string"
              },
              "query": {
                "description": "This query will restrict the results retrieved from Bullhorn based on the specified conditions",
                "type": "string",
                "default": "isDeleted:0"
              },
              "fields": {
                "description": "Field to be used as reference for archiving",
                "type": "string",
                "default": "id"
              }
            },
            "required": [
              "last_modified_date"
            ]
          },
          "target": "HrFlow",
          "target_data_schema": {
            "title": "HrFlowProfile",
            "type": "object",
            "properties": {
              "key": {
                "description": "Identification key of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "reference": {
                "description": "Custom identifier of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "info": {
                "description": "Object containing the Profile's info.",
                "$ref": "#/$defs/ProfileInfo"
              },
              "text_language": {
                "description": "Code language of the Profile. type: string code ISO 639-1",
                "type": "string"
              },
              "text": {
                "description": "Full text of the Profile.",
                "type": "string"
              },
              "archived_at": {
                "description": "type: datetime ISO8601, Archive date of the Profile. The value is null for unarchived Profiles.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "updated_at": {
                "description": "type: datetime ISO8601, Last update date of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "created_at": {
                "description": "type: datetime ISO8601, Creation date of the Profile.",
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "experiences_duration": {
                "description": "Total number of years of experience.",
                "type": "number"
              },
              "educations_duration": {
                "description": "Total number of years of education.",
                "type": "number"
              },
              "experiences": {
                "description": "List of experiences of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Experience"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": []
              },
              "educations": {
                "description": "List of educations of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Education"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": []
              },
              "attachments": {
                "description": "List of documents attached to the Profile.",
                "type": "array",
                "default": []
              },
              "skills": {
                "description": "List of skills of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Skill"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "languages": {
                "description": "List of spoken languages of the profile",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "certifications": {
                "description": "List of certifications of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "courses": {
                "description": "List of courses of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tasks": {
                "description": "List of tasks of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "interests": {
                "description": "List of interests of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "tags": {
                "description": "List of tags of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadatas": {
                "description": "List of metadatas of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/GeneralEntitySchema"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "labels": {
                "description": "List of labels of the Profile.",
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/Label"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "required": [
              "info",
              "text_language",
              "text",
              "experiences_duration",
              "educations_duration"
            ]
          },
          "push_parameters": {
            "title": "ArchiveCriterias",
            "type": "object",
            "properties": {
              "source_key": {
                "description": "HrFlow.ai source key",
                "type": "string"
              }
            },
            "required": [
              "source_key"
            ]
          },
          "jsonmap": {},
          "workflow": {
            "catch_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\n\n# << event_parser_placeholder >>\n\n\n\ndef workflow(\n        \n        _request: dict,\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.archive_profiles_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n    event_parser = globals().get(\"event_parser\", globals().get(\"default_event_parser\"))\n\n    if event_parser is not None:\n        try:\n            _request = event_parser(_request)\n        except Exception as e:\n            return Bullhorn.archive_profiles_in_hrflow(\n                workflow_id=workflow_id,\n                connector_auth=dict(),\n                hrflow_auth=dict(),\n                pull_parameters=dict(),\n                push_parameters=dict(),\n                init_error=ActionInitError(\n                    reason=Reason.event_parsing_failure,\n                    data=dict(error=e, event=_request),\n                )\n            )\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            connector_auth[parameter] = _request[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            hrflow_auth[parameter] = _request[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'last_modified_date', 'query', 'fields'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            pull_parameters[parameter] = _request[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('source_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n        if parameter_name in _request:\n            push_parameters[parameter] = _request[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.archive_profiles_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "pull_template": "import typing as t\n\nfrom hrflow_connectors.v2 import Bullhorn\nfrom hrflow_connectors.v2.core.run import ActionInitError, Reason\n\nCONNECTOR_AUTH_SETTINGS_PREFIX = \"connector_auth_\"\nHRFLOW_AUTH_SETTINGS_PREFIX = \"hrflow_auth_\"\nPULL_PARAMETERS_SETTINGS_PREFIX = \"pull_parameters_\"\nPUSH_PARAMETERS_SETTINGS_PREFIX = \"push_parameters_\"\n\n# << format_placeholder >>\n\n# << logics_placeholder >>\n\n# << callback_placeholder >>\n\n\n\ndef workflow(\n        \n        settings: dict\n    ) -> None:\n    if \"__workflow_id\" not in settings:\n        return Bullhorn.archive_profiles_in_hrflow(\n            workflow_id=\"\",\n            connector_auth=dict(),\n            hrflow_auth=dict(),\n            pull_parameters=dict(),\n            push_parameters=dict(),\n            init_error=ActionInitError(\n                reason=Reason.workflow_id_not_found,\n                data=dict(error=\"__workflow_id not found in settings\", settings_keys=list(settings.keys())),\n            )\n        )\n    workflow_id = settings[\"__workflow_id\"]\n\n    \n\n    connector_auth = dict()\n    for parameter in ('client_id', 'client_secret', 'password', 'username'):\n        parameter_name = \"{}{}\".format(CONNECTOR_AUTH_SETTINGS_PREFIX, parameter) \n        if parameter_name in settings:\n            connector_auth[parameter] = settings[parameter_name]\n        \n\n    hrflow_auth = dict()\n    for parameter in ('api_secret', 'api_user'):\n        parameter_name = \"{}{}\".format(HRFLOW_AUTH_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            hrflow_auth[parameter] = settings[parameter_name]\n        \n\n    pull_parameters = dict()\n    for parameter in ('limit', 'last_modified_date', 'query', 'fields'):\n        parameter_name = \"{}{}\".format(PULL_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            pull_parameters[parameter] = settings[parameter_name]\n        \n\n    push_parameters = dict()\n    for parameter in ('source_key',):\n        parameter_name = \"{}{}\".format(PUSH_PARAMETERS_SETTINGS_PREFIX, parameter)\n        if parameter_name in settings:\n            push_parameters[parameter] = settings[parameter_name]\n        \n\n    incremental = settings.get(\"__incremental\")\n\n    return Bullhorn.archive_profiles_in_hrflow(\n        workflow_id=workflow_id,\n        connector_auth=connector_auth,\n        hrflow_auth=hrflow_auth,\n        pull_parameters=pull_parameters,\n        push_parameters=push_parameters,\n        logics=globals().get(\"logics\"),\n        format=globals().get(\"format\"),\n        callback=globals().get(\"callback\"),\n        incremental=incremental == \"enable\",\n    )",
            "settings_keys": {
              "workflow_id": "__workflow_id",
              "incremental": "__incremental",
              "connector_auth_prefix": "connector_auth_",
              "hrflow_auth_prefix": "hrflow_auth_",
              "pull_parameters_prefix": "pull_parameters_",
              "push_parameters_prefix": "push_parameters_"
            },
            "placeholders": {
              "logics": "# << logics_placeholder >>",
              "format": "# << format_placeholder >>",
              "callback": "# << callback_placeholder >>",
              "event_parser": "# << event_parser_placeholder >>"
            },
            "expected": {
              "activate_incremental": "enable",
              "logics_functions_name": "logics",
              "format_functions_name": "format",
              "callback_functions_name": "callback",
              "event_parser_function_name": "event_parser"
            }
          }
        }
      ]
    }
  ]
}